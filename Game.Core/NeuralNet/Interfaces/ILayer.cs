using System;
using System.Collections.Generic;

namespace Game.Core.NeuralNet.Interfaces
{
  /// <summary>
  ///   The interface for all neural network layers.
  /// </summary>
  public interface ILayer
  {
    /// <summary>
    ///   Get the network that contains the layer.
    /// </summary>
    INetwork Network { get; }

    /// <summary>
    ///   Get the layer's position in the network.
    /// </summary>
    int Index { get; }

    /// <summary>
    ///   Get the unique name for the layer.
    /// </summary>
    string Name { get; }

    /// <summary>
    ///   Get the number of inputs expected by neurons in the layer.
    /// </summary>
    int NumInputs { get; }

    /// <summary>
    ///   Get the number of outputs generated by the layer.
    /// </summary>
    int NumOutputs { get; }

    /// <summary>
    ///   Get the neurons in the layer.
    /// </summary>
    IReadOnlyList<INeuron> Neurons { get; }

    /// <summary>
    ///   Get the last inputs received by the layer.
    /// </summary>
    IReadOnlyList<float> Inputs { get; }

    /// <summary>
    ///   Get the last outputs calculated by the layer.
    /// </summary>
    IReadOnlyList<float> Outputs { get; }

    /// <summary>
    ///   Adds a neuron to the layer.
    /// </summary>
    /// <param name="neuron"></param>
    /// <exception cref="ArgumentNullException">
    ///   neuron is null
    /// </exception>
    /// <exception cref="InvalidOperationException">
    ///   The neuron is not assigned to this layer.
    ///   -or-
    ///   The number of inputs for neuron does not match the number of inputs
    ///   for this layer.
    /// </exception>
    void AddNeuron(INeuron neuron);

    /// <summary>
    ///   Updates all neurons in the layer.  <see cref="Layer.Outputs"/> is 
    ///   updated with the outputs of the 
    ///   neurons.
    /// </summary>
    /// <param name="inputs"></param>
    /// <exception cref="ArgumentNullException">
    ///   inputs is null
    /// </exception>
    /// <exception cref="InvalidOperationException">
    ///   inputs is the wrong size
    ///   -or-
    ///   The layer has no neurons.
    /// </exception>
    void Update(IReadOnlyList<float> inputs);
  }
}
